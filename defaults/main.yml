---
# defaults file for chris2k20-workstation

workstation_folders:
- path: "{{ ansible_env.HOME }}/.config/conky"

workstation_binaries:
- name: minikube
  dest: "/usr/local/bin/minikube"
  url: "https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"
- name: fubectl
  dest: "{{ ansible_env.HOME }}/fubectl.source"
  url: "https://rawgit.com/kubermatic/fubectl/master/fubectl.source"

workstation_aptrepos_ubuntu:
- name: nextcloud
  repo: "ppa:nextcloud-devs/client"

workstation_packages_ubuntu:
  - tilix
  - tmux
  - gnome-tweak-tool
  - nextcloud-client
  - hstr
  - conky

workstation_debs_ubuntu:
  - name: vscode
    deb: https://update.code.visualstudio.com/1.72.2/linux-deb-x64/stable
  - name: teamviewer
    deb: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
  - name: openlens for kubernetes
    deb: https://github.com/MuhammedKalkan/OpenLens/releases/download/v6.1.14/OpenLens-6.1.14.deb
  - name: abricotine markdown editor
    deb: https://github.com/brrd/abricotine/releases/download/v1.1.4/abricotine_1.1.4_amd64.deb

workstation_rpms_centos:
  - name: openlens for kubernetes
    deb: https://github.com/MuhammedKalkan/OpenLens/releases/download/v6.5.2-366/OpenLens-6.5.2-366.x86_64.rpm

workstation_snaps_ubuntu:
  - chromium
  - keepassxc
  - spotify

workstation_config_ubuntu:
- dest: /etc/bash.bashrc
  content: |
      # HSTR configuration - add this to ~/.bashrc
      alias hh=hstr                    # hh to be alias for hstr
      export HSTR_CONFIG=hicolor       # get more colors
      shopt -s histappend              # append new history items to .bash_history
      export HISTCONTROL=ignorespace   # leading space hides commands from history
      export HISTFILESIZE=100000000    # increase history file size (default is 500)
      export HISTSIZE=${HISTFILESIZE}  # increase history size (default is 500)
      # ensure synchronization between bash memory and history file
      export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"
      # if this is interactive shell, then bind hstr to Ctrl-r (for Vi mode check doc)
      if [[ $- =~ .*i.* ]]; then bind '"\C-r": "\C-a hstr -- \C-j"'; fi
      # if this is interactive shell, then bind 'kill last command' to Ctrl-x k
      if [[ $- =~ .*i.* ]]; then bind '"\C-xk": "\C-a hstr -k \C-j"'; fi

workstation_dconf_ubuntu:
- name: setting layouts
  key: "/org/gnome/libgnomekbd/keyboard/layouts"
  value: "['de', 'us']"
  state: present

kubectl_plugins:
- stern

workstation_scripts:
  - name: "Install Oh My Zsh"
    script: |
      #!/bin/bash
      # Install Zsh if not present
      if ! command -v zsh &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y zsh
      fi
      # Install Oh My Zsh
      sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" || {
        echo "Oh My Zsh installation failed"
        exit 1
      }
