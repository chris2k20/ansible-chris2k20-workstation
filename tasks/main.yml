---
# tasks file for chris2k20-workstation

- name: Setup
  setup:

- name: Create folder
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state | default('directory') }}"
    mode:  "{{ item.mode | default('0750') }}"
  become: true
  with_items: "{{ workstation_folders }}"

- name: Download binaries
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('0550') }}"
  become: true
  with_items: "{{ workstation_binaries }}"

- name: "Add apt repos (Ubuntu)"
  apt_repository:
    repo: "{{ item.repo }}"
    update_cache: true
  with_items: "{{ workstation_aptrepos_ubuntu }}"
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: "Install snap programs (Ubuntu)"
  snap:
    name: "{{ workstation_snaps_ubuntu }}"
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: "Install workstation_packages_ubuntu via apt (Ubuntu)"
  apt:
    name: "{{ workstation_packages_ubuntu }}"
    update_cache: true
    state: present
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: "Install deb-packages (Ubuntu)"
  ansible.builtin.apt:
    deb: "{{ item.deb }}"
  become: true
  with_items: "{{ workstation_debs_ubuntu }}"
  when: ansible_distribution == 'Ubuntu'

- name: "Create static config (Ubuntu)"
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
  become: true
  with_items: "{{ workstation_config_ubuntu }}"
  when: ansible_distribution == 'Ubuntu'

- name: "Configure dconf (Ubuntu)"
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ workstation_dconf_ubuntu }}"
  when: ansible_distribution == 'Ubuntu'
